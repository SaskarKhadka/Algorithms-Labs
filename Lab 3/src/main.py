from bst import BinarySearchTree
from student import Student

bst = BinarySearchTree()

std1 = Student(name="Ram", roll_no=10, semester=2, year=3, grade=3.45)
std2 = Student(name="Shyam", roll_no=40, semester=2, year=3, grade=3.55)
std3 = Student(name="Hari", roll_no=2, semester=2, year=3, grade=3.95)
std4 = Student(name="Sita", roll_no=1, semester=2, year=3, grade=3.35)
std5 = Student(name="Gita", roll_no=33, semester=2, year=3, grade=3.15)
std6 = Student(name="Rita", roll_no=9, semester=2, year=3, grade=3.05)
std7 = Student(name="Laxman", roll_no=23, semester=2, year=3, grade=3.00)
std8 = Student(name="Saskar", roll_no=89, semester=2, year=3, grade=3.00)
print("BST empty: ", bst.is_empty())
bst.add(10, std1)
bst.add(40, std2)
print("BST empty: ", bst.is_empty())
bst.add(2, std3)
bst.add(1, std4)
bst.add(33, std5)
bst.add(9, std6)
result = bst.search(10)
print("Name of student with roll no. 10:",
      "Doesn't exist" if not result else result.name)
result = bst.search(100)
print("Name of student with roll no. 100:",
      "Doesn't exist" if not result else result.name)
bst.add(23, std7)
print("Largest:", bst.largest()[0])
print("Smallest:", bst.smallest()[0])
bst.add(89, std8)
print("Largest:", bst.largest()[0])
print("Preorder walk: ", bst.preorder_walk())
print("Inorder walk: ", bst.inorder_walk())
print("Postorder walk: ", bst.postorder_walk())
bst.remove(40)
bst.remove(1)
print("Preorder walk: ", bst.preorder_walk())
print("Inorder walk: ", bst.inorder_walk())
print("Postorder walk: ", bst.postorder_walk())
